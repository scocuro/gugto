# .github/workflows/data-collection.yml
name: 공공데이터 수집

on:
  workflow_dispatch:
    inputs:
      data_type:
        description: >
          요청 데이터  
          • all: All-in-one (실거래 + 미분양 + 인구 + 월별 매매가격 지수)  
          • real-estate: 실거래(매매,전월세,분양권)  
          • notsold: 미분양 현황  
          • population: 인구 현황  
          • monthly-price-index: 월별 매매가격 지수  
        required: true
        type: choice
        default: 'all'
        options:
          - all
          - real-estate
          - notsold
          - population
          - monthly-price-index
      region_name:
        description: '시도[ 시군구[ 읍면동]] (예: 경상남도 진주시)'
        required: true
        default: '경상남도 진주시'
      start_year:
        description: '실거래 시작 연도 (YYYY)'
        required: false
        default: '2020'
      start:
        description: '미분양/인구/지수 시작 기간 (YYYYMM)'
        required: false
        default: '202501'
      end:
        description: '미분양/인구/지수 종료 기간 (YYYYMM)'
        required: false
        default: '202505'

jobs:
  collect:
    runs-on: ubuntu-latest

    env:
      PYTHONPATH: ${{ github.workspace }}
      PUBLIC_DATA_API_KEY: ${{ secrets.PUBLIC_DATA_API_KEY }}
      MOLIT_STATS_KEY:     ${{ secrets.MOLIT_STATS_KEY }}
      POP_KEY:             ${{ secrets.POP_KEY }}
      REB_KEY:             ${{ secrets.REB_KEY }}

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: 파이썬 설정
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: 의존성 설치
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 데이터 수집 실행
        run: |
          TYPE="${{ github.event.inputs.data_type }}"
          REGION="${{ github.event.inputs.region_name }}"

          case "${TYPE}" in
            all)
              # 1) 실거래
              OUT1="국토교통부 실거래데이터_${REGION}.xlsx"
              python real_estate_report.py \
                --region-name "${REGION}" \
                --start-year "${{ github.event.inputs.start_year }}" \
                --output "${OUT1}"

              # 2) 미분양
              OUT2="미분양 현황_${REGION}.xlsx"
              python notsold.py \
                --region-name "${REGION}" \
                --start "${{ github.event.inputs.start }}" \
                --end   "${{ github.event.inputs.end }}" \
                --output "${OUT2}"

              # 3) 인구
              OUT3="인구 현황_${REGION}.xlsx"
              python population_report.py \
                --region-name "${REGION}" \
                --start "${{ github.event.inputs.start }}" \
                --end   "${{ github.event.inputs.end }}" \
                --output "${OUT3}"

              # 4) 월별 매매가격 지수
              OUT4="월별매매가격지수_${REGION}.xlsx"
              python monthly_price_index.py \
                --region-name "${REGION}" \
                --start "${{ github.event.inputs.start }}" \
                --end   "${{ github.event.inputs.end }}" \
                --output "${OUT4}"
              ;;

            real-estate)
              OUT="국토교통부 실거래데이터_${REGION}.xlsx"
              python real_estate_report.py \
                --region-name "${REGION}" \
                --start-year "${{ github.event.inputs.start_year }}" \
                --output "${OUT}"
              ;;

            notsold)
              OUT="미분양 현황_${REGION}.xlsx"
              python notsold.py \
                --region-name "${REGION}" \
                --start "${{ github.event.inputs.start }}" \
                --end   "${{ github.event.inputs.end }}" \
                --output "${OUT}"
              ;;

            population)
              OUT="인구 현황_${REGION}.xlsx"
              python population_report.py \
                --region-name "${REGION}" \
                --start "${{ github.event.inputs.start }}" \
                --end   "${{ github.event.inputs.end }}" \
                --output "${OUT}"
              ;;

            monthly-price-index)
              OUT="월별매매가격지수_${REGION}.xlsx"
              python monthly_price_index.py \
                --region-name "${REGION}" \
                --start "${{ github.event.inputs.start }}" \
                --end   "${{ github.event.inputs.end }}" \
                --output "${OUT}"
              ;;

            *)
              echo "지원하지 않는 data_type: ${TYPE}"
              exit 1
              ;;
          esac

      - name: 결과 업로드
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: '*.xlsx'
